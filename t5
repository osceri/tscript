-- Current location, +z is up
local x = 0
local y = 0
local z = 0

-- Current orientation
--        +x
--        00
--  -y 03 TR 01 +y
--        02
--        -x
local O = 0

function count(func, N)
  local n = 0
  while n < N do
    if func() then
      n = n + 1
    else
      return false
    end
  end
end

function set_orientation(P)
  local k = (P - O) % 4
  if k == 1 then
    turtle.turnRight()
  end
  if k == 2 then
    turtle.turnRight()
    turtle.turnRight()
  end
  if k == 3 then
    turtle.turnLeft()
  end
  O = P
end

function go_forward()
  local F = turtle.forward()
  if F then
    if O == 0 then
      x = x + 1
    end
    if O == 1 then
      y = y + 1
    end
    if O == 2 then
      x = x - 1
    end
    if O == 3 then
      y = y - 1
    end
  end
  return F
end

function go_up()
  local F = turtle.up()
  if F then
    z = z + 1
  end
  return F
end

function go_down()
  local F = turtle.down()
  if F then
    z = z - 1
  end
  return F
end

function movex(dx)
  if 0 < dx then 
    set_orientation(0)
    return count(go_forward, dx)
  end
  if 0 > dx then 
    set_orientation(2)
    return count(go_forward, -dx)
  end
end
    
function movey(dy)
  if 0 < dy then 
    set_orientation(1)
    return count(go_forward, dy)
  end
  if 0 > dy then 
    set_orientation(3)
    return count(go_forward, -dy)
  end
end

function movez(dz)
  if 0 < dz then 
    return count(go_up, dz)
  end
  if 0 > dz then 
    return count(go_down, -dz)
  end
end
